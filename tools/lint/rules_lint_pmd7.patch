diff --git a/lint/pmd.bzl b/lint/pmd.bzl
index 2405f15..0d3ada5 100644
--- a/lint/pmd.bzl
+++ b/lint/pmd.bzl
@@ -32,7 +32,10 @@ load("//lint/private:lint_aspect.bzl", "LintOptionsInfo", "filter_srcs", "noop_l

 _MNEMONIC = "AspectRulesLintPMD"

-def pmd_action(ctx, executable, srcs, rulesets, stdout, exit_code = None, options = []):
+def _short_path(file, _):
+    return file.path
+
+def pmd_action(ctx, executable, target, srcs, rulesets, stdout, exit_code = None, options = []):
     """Run PMD as an action under Bazel.

     Based on https://docs.pmd-code.org/latest/pmd_userdocs_installation.html#running-pmd-via-command-line
@@ -47,15 +50,22 @@ def pmd_action(ctx, executable, srcs, rulesets, stdout, exit_code = None, option
             If None, then fail the build when PMD exits non-zero.
         options: additional command-line options, see https://pmd.github.io/pmd/pmd_userdocs_cli_reference.html
     """
-    inputs = srcs + rulesets
+    deps = depset(
+        transitive = [target[JavaInfo].compile_jars, target[JavaInfo].transitive_compile_time_jars],
+    )
+    inputs = srcs + rulesets + deps.to_list()
     outputs = [stdout]

     # Wire command-line options, see
     # https://docs.pmd-code.org/latest/pmd_userdocs_cli_reference.html
     args = ctx.actions.args()
+    args.add("check")
     args.add_all(options)
+    args.add("--no-progress")
+    args.add("--no-cache")
     args.add("--rulesets")
     args.add_joined(rulesets, join_with = ",")
+    args.add_joined("--aux-classpath", deps, join_with = ":")#, map_each = _short_path)

     src_args = ctx.actions.args()
     src_args.use_param_file("%s", use_always = True)
@@ -91,8 +101,8 @@ def _pmd_aspect_impl(target, ctx):

     # https://github.com/pmd/pmd/blob/master/docs/pages/pmd/userdocs/pmd_report_formats.md
     format_options = ["--format", "textcolor" if ctx.attr._options[LintOptionsInfo].color else "text"]
-    pmd_action(ctx, ctx.executable._pmd, files_to_lint, ctx.files._rulesets, outputs.human.out, outputs.human.exit_code, format_options)
-    pmd_action(ctx, ctx.executable._pmd, files_to_lint, ctx.files._rulesets, outputs.machine.out, outputs.machine.exit_code)
+    pmd_action(ctx, ctx.executable._pmd, target, files_to_lint, ctx.files._rulesets, outputs.human.out, outputs.human.exit_code, format_options)
+    pmd_action(ctx, ctx.executable._pmd, target, files_to_lint, ctx.files._rulesets, outputs.machine.out, outputs.machine.exit_code)
     return [info]

 def lint_pmd_aspect(binary, rulesets, rule_kinds = ["java_binary", "java_library"]):
@@ -104,7 +114,7 @@ def lint_pmd_aspect(binary, rulesets, rule_kinds = ["java_binary", "java_library
             ```
             java_binary(
                 name = "pmd",
-                main_class = "net.sourceforge.pmd.PMD",
+                main_class = "net.sourceforge.pmd.cli.PmdCli",
                 # Point to wherever you have the java_import rule defined, see our example
                 runtime_deps = ["@net_sourceforge_pmd"],
             )
@@ -116,7 +126,7 @@ def lint_pmd_aspect(binary, rulesets, rule_kinds = ["java_binary", "java_library
         implementation = _pmd_aspect_impl,
         # Edges we need to walk up the graph from the selected targets.
         # Needed for linters that need semantic information like transitive type declarations.
-        # attr_aspects = ["deps"],
+        attr_aspects = ["deps"],
         attrs = {
             "_options": attr.label(
                 default = "//lint:options",
@@ -144,7 +154,7 @@ def fetch_pmd():
     http_archive(
         name = "net_sourceforge_pmd",
         build_file_content = """java_import(name = "net_sourceforge_pmd", jars = glob(["*.jar"]), visibility = ["//visibility:public"])""",
-        sha256 = "21acf96d43cb40d591cacccc1c20a66fc796eaddf69ea61812594447bac7a11d",
-        strip_prefix = "pmd-bin-6.55.0/lib",
-        url = "https://github.com/pmd/pmd/releases/download/pmd_releases/6.55.0/pmd-bin-6.55.0.zip",
+        sha256 = "e07f7a9c3607d643509a96d7f5f891961e98ea88b6eba85d120d08f0c08c985e",
+        strip_prefix = "pmd-bin-7.6.0/lib",
+        url = "https://github.com/pmd/pmd/releases/download/pmd_releases/7.6.0/pmd-dist-7.6.0-bin.zip",
     )
